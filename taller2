/*taller dos estrctura de datos II 
Desarrolladores: Juliana Medina, Juan Manuel Cardona Valencia
El siguiente programa nos muestra los ejercicios planteados en el taller anterior realizados por medio de punteros 
agregamos un pequeño menu en el cual podrá trsaladarse a los distintos puntos de cada caso 
*/
#include<iostream>
#include<stdio.h>
#include<stdlib.h>
#include <windows.h>
#include <string.h>
#include <time.h>
void par_impar();
void num_primo();
void arraynum();
void menor();
void cadena();
void vocales();
void menu();
void punto1();
void arraydecimales();
void unos_ceros();
void elevados();
void arrayunosyceros();
void punto2();
void pedir_datos();
void imprimir();
int matrizz[3][3];
int* pm=&matrizz[0][0];
int m;
void llenarnumal();
int mmatriz[3][3];
int* pmm=&mmatriz[0][0];
void punto3();
struct competidor{
	char nombre[30];
	int edad;
	char sexo;
	char club[20];
}atleta,*patleta=&atleta;
void d_atleta(competidor *);
struct estudiante{
	char nombre[30];
	int edad;
	int grado;
	float promedio;
}a[3],*pa=a;
void c_promedio();
int l,pos=0,posc,may=0,men,fil,col,t;
int matriz [100][100];
int*pmatriz=&matriz[0][0];
float prom[100];
struct trabajador{
	char nombre[30];
	int salario;
}*pn,n[100];
void empresa();
struct promedio{
	float n_1,n_2,n_3;
};
struct alumns{
	char nombre[30];
	char sexo;
	int edad;
	promedio p;
}aprendiz,*paprendiz=&aprendiz,nAprendiz[100],*pnAprendiz=nAprendiz;
void strAnidado(alumns *);
void nstrAnidado(alumns *);
struct persona{
	char nombre[30];
	bool discapacidad;
}personas[100], pdiscapacidad[100], psdiscapacidad[100];

persona *puntpersonas = personas;
persona *ppdiscapacidad = pdiscapacidad; 
persona *ppsdiscapacidad = psdiscapacidad;
int con = 0, sin = 0;

void llenarDatos(int cantidad, persona *puntpersonas);
void validarDatos(int cantidad);
void imprimirDatodiscapacidad(int cantidad);
void imprimirDatosindiscapacidad(int cantidad);


void punto4();
int opc,bandera=1,i,j,f;
char caso;
struct alumno{
	char nombre[30];
	int edad;
	float promedio;
}estudiantes[3],*p=estudiantes;

void llenar();
void mostrarstruct(alumno *);
struct tiempo{
	int hora1,hora2,hora3,min1,min2,min3,seg1,seg2,seg3;
	int thoras,tmin,tseg;
}ciclista, *pciclista=&ciclista;
void pedirdatos();
void imprimirdatos();
int totalhoras,totalmin,totalseg;
int *thoras=&totalhoras;
int *tmin=&totalmin;
int *tseg=&totalseg;
void ascendente();
void imprimir_ascendente();
int numeros[100];
int* num=numeros;
int no,aux,n1,c=0;;
void pedir_datosnum();
void consultar();
int nums[100];
int* pno=nums;
void pedir_datosm();
void suma();
int mat[100][100];
int* pmat=&mat[0][0];
int mat2[100][100];
int* pmat2=&mat2[100][100];
int resultado[100][100];
int* presult=&resultado[100][100];
void pedir_datost();
void traspuesta();
void pedir_datost();
void traspuesta();
int tras[100][100];
int* ptras=&tras[100][100];
int main () {
	menu();
	return 0;
}
void menu(){
	
	
	while (bandera!=0){
		printf("MENU \n\n");
		printf("1. Ejercicios de Arreglos con Punteros \n");
		printf("2. Matrices con Punteros \n");
		printf("3. Ejercicios de Estructuras con Punteros \n");
		printf("4. Ejercicios de Punteros \n");
		printf("0. SALIR \n \n");
		printf("Seleccione una opcion \n \n");
		scanf("%d",&opc);
		system("cls");
		switch(opc){
		case 1:
			punto1();
			break;
		case 2:
			punto2();
			break;
		case 3:
			punto3();
			break;
		case 4:
			punto4();
			
			break;
		case 0:
			printf("SALIR");
			bandera=0;
			break;
		default:
			system("cls");
			printf("opcion invalida \n");
			Sleep(1000);
			system("cls");
			break;
			
			
		}
	}
}
void punto1(){
	printf(" a. array de numeros decimales \n ");
	printf("b. array que contiene unos y ceros  \n ");
	printf("c. array 4*4 ,de cuatro elementos elevados al cuadrado, al cubo y a la cuarta\n\n ");
	printf("Seleccione una opcion \n\n ");
	scanf("%s",&caso);
	system("cls");
	switch(caso){
	case 'a':
		arraydecimales();
		system("pause");
		system("cls");
		break;
	case 'b':
		unos_ceros();
		system("pause");
		system("cls");
		break;
	case 'c':
		elevados();
		system("pause");
		system("cls");
		break;
	}
}
void arraydecimales(){
	float a[]={32.538,11.239,45.781,22.237};
	float* pa=a;
	
	for (int i=0;i<4;i++){
		printf("%.3f \n",*(pa+i));
	}
}
void unos_ceros(){
	printf("Numero de filas: ");
	scanf("%d",&fil);
	printf("Numero de Columnas: ");
	scanf("%d",&col);
	for(i=0;i<fil;i++){
		for(j=0;j<col;j++){
			if(i==j){
				*(pmatriz+i+j*col)=1;
			}else{
				if(i!=j){
					*(pmatriz+i+j*col)=0;	
				}
				
			}
		}
	}
	for(i=0;i<fil;i++){
		for(j=0;j<col;j++){
			printf("%d\t",*(pmatriz+i+j*col));
		}
		printf("\n");
	}
	
}
void punto2(){
	printf(" a. Matriz con Suma de todas las posiciones \n ");
	printf("b. Matriz con numeros aleatorios \n ");
	printf("c. Matriz con numeros aleatorios primos \n\n ");
	printf("Seleccione una opcion \n\n ");
	scanf("%s",&caso);
	system("cls");	
	switch(caso){
	case 'a':
		pedir_datos();
		imprimir();
		system("pause");
		system("cls");
		break;
	case 'b':
		llenarnumal();
		system("pause");
		system("cls");
		break;
	}
}
void pedir_datos(){
	printf("Datos de la matriz\n Posiciones\n");
	
	for(i=0;i<3;i++){
		for(j=0;j<3;j++){
			printf("%d,%d:  ",j,i);
			scanf("%d",&(*(pmm+i+j*3)));
		}
	}	
	
	for(i=0;i<3;i++){
		for(j=0;j<3;j++){
			
			m+=*(pmm+i+j*3);
		}
	}
	
	
}

void imprimir(){
	printf("\n***Matriz****\n");
	for(i=0;i<3;i++){
		for(j=0;j<3;j++){
			printf("%d\t",*(pm+i+j*3));
			
		}
		printf("\n");
	}
	printf("La suma de la matriz es: \n");
	
	printf("%d\n",m);
	
}
void llenarnumal(){
	
	srand(time(NULL));
	printf("MATRIZ NUMEROS ALEATORIOS\n");
	for(i=0;i<3;i++){
		for(j=0;j<3;j++){
			t=1+rand()%((50+1)-1);
			*(pmm+i+j*3)=t;
			printf("%d \t",*(pmm+i+j*3));
		}
		printf("\n");
	}
	
}

void punto4(){
	printf(" a. Comprobar si un numero es par o impar y senalar la pos de memoria \n ");
	printf("b. Numero Primo con Punteros \n ");
	printf("c. array de 10 elementos \n ");
	printf("d. array de n elementos y determinar cual es el elemento menor \n ");
	printf("e. numero de vocales en su nombre \n ");
	printf("f. cadena de caracteres donde te dice cuantas veces aparece una vocal \n ");
	printf("g. estructura de tres alumnos  y determinar cual es el mejor promedio \n ");
	printf("h. estructura Tiempo empleado por un ciclista en recorrer una etapa \n ");
	printf("i. sumar dos matrices de m*n \n ");
	printf("j. arreglo de numeros ordenados de manera ascendente  \n ");
	printf("k. arreglo de n elementos y a parte busca un numero en particular \n\n ");
	printf("l. Matriz con su Matriz traspuesta  \n\n ");
	printf("Seleccione una opcion \n\n ");
	scanf("%s",&caso);
	system("cls");
	switch(caso){
	case 'a':
		par_impar();
		system("pause");
		system("cls");
		break;
	case 'b':
		num_primo();
		system("pause");
		system("cls");
		break;
	case 'c':
		arraynum();
		system("pause");
		system("cls");
		break;
	case 'd':
		menor();
		system("pause");
		system("cls");
		break;
	case 'e':
		vocales();
		system("pause");
		system("cls");
		break;
	case 'f':
		cadena();
		system("pause");
		system("cls");
		break;
	case 'g':
		llenar();
		mostrarstruct(p);
		system("pause");
		system("cls");
		break;
	case 'h':
		pedirdatos();
		imprimirdatos();
		system("pause");
		system("cls");
		break;
	case 'i':
		pedir_datosm();
		suma();
		system("pause");
		system("cls");
		break;
	case 'j':
		ascendente();
		imprimir_ascendente();
		system("pause");
		system("cls");
	
	break;
	case 'k':
		pedir_datosnum();
		consultar();
		system("pause");
		system("cls");
		break;
	
	
	case 'l':
		   pedir_datost();
		   traspuesta();
		   system("pause");
		   system("cls");   
		   break;
}
}
void par_impar(){
	//comprobar si un numero es par o impar y senalar la pos de memoria 
	int n;
	int *num=&n;
	printf("Digite un numero para saber si es par o impar\n");
	scanf("%d",&(*num));
	if(*num%2==0){
		printf("Es par \n Direccion de Menoria: %p\n",num);
	}else{
		printf("Es Impar  \n Direccion de memoria: %p\n",num);
	}
}
void num_primo(){
	int n,c=0;
	int *num=&n;
	printf("Digite un numero para saber si es primo o compuesto\n");
	scanf("%d",&(*num));
	for(i=1;i<=*num;i++){
		if(*num%i==0){
			c++;
		}
		
	}
	if(c==2){
		printf("Es Primo \n Direccion de Memoria: %p \n",&num);
	}else{
		printf(" Es Compuesto \n Direccion de Memoria: %p \n",&num);	
	}
	
}
void arraynum(){
	int a[10],b[10],k=0;
	int* pa=a;
	int* pb=b;
	
	printf("Ingrese los elementos del vector\n");
	for(i=0;i<10;i++){
		scanf("%d",&(*(pa+i)));
	}
	printf("\n");
	
	
	
	for(i=0;i<10;i++){
		if(*(pa+i)%2==0){
			b[k]=*(pa+i);
			k++;
		}
	}
	printf("\n");
	printf("Pares:\n ");
	
	for(i=0;i<k;i++){
		printf("%d\n ",*(pb+i));
	}
	printf("\n");
	printf("Direccion de Memoria de Pares:\n");
	for(i=0;i<k;i++){
		printf("%p\n ",&b[i]);
	}
}

void menor(){
	int n,i,x[100];
	printf("Digite un numero para el tamano del vector \n");
	scanf("%d",&n);
	x[n];
	int* arreglo=x;
	printf("Digite numeros para el vector \n ");
	for(i=0;i<n;i++){
		scanf("%d",&(*(arreglo+i)));
	}
	int menor=*arreglo;
	for(i=0;i<n;i++){
		if(*(arreglo+i)<menor){
			menor=*(arreglo+i);
		}
	}
	printf("el menor de los numeros es %d\n",menor);
}

void vocales(){
	int cont=0,i,b;
	int* pc=&cont;
	fflush(stdin);
	char name[30];
	printf("Ingrese su Nombre Completo:\n");
	fgets(name,30,stdin);
	for(i=0;i<b;i++){
		b=strlen(name);
		switch(name[i]){
		case 'a':cont=*pc+1;
		break;           
		case 'e':cont=*pc+1;
		break;           
		case 'i':cont=*pc+1;
		break; 
		case 'o':cont=*pc+1;
		break;
		case 'u':cont=*pc+1;
		break;             
		}      
	}
	printf("Su Nombre tiene %d vocales \n",cont);
}

void cadena(){
	char txt[40];
	int d,a=0,e=0,i=0,y,o=0,u=0,ca=0,ce=0,ci=0,co=0,cu=0;
	int* p_a=&a;
	int* p_e=&e;
	int* p_i=&i;
	int* p_o=&o;
	int* p_u=&u;
	fflush(stdin);
	printf("Escriba un texto \n");
	fgets(txt,40,stdin);
	d=strlen(txt);
	for(y=0;y<=d;y++){
		if (txt[y]=='a'){
			ca=*p_a+1; 
			a=ca;
		}else{
			if (txt[y]=='e'){
				ce=*p_e+1; 
				e=ce;
			}else{
				if (txt[y]=='i'){
					ci=*p_i+1; 
					i=ci;
				}else
					if (txt[y]=='o'){
						co=*p_o+1;
						o=co;
				}else
						if (txt[y]=='u'){
							cu=*p_u+1;
							u=cu;
					}
			}
		}
	}
	printf("la vocal a aparece %d letras \n",ca);
	printf("la vocal e aparece %d letras \n",ce);
	printf("la vocal i aparece %d letras \n",ci);
	printf("la vocal o aparece %d letras \n",co);
	printf("la vocal u aparece %d letras \n",cu);
}

void llenar(){
	
	
	for(i=0;i<3;i++){
		fflush(stdin);
		printf("ingrese el nombre del estudiante: ");
		fgets((p+i)->nombre,30,stdin);
		printf("ingrese la edad del estudiante:");
		scanf("%d",&(p+i)->edad);
		printf("Ingrese el Promedio del Estudiante:");
		scanf("%f",&(p+i)->promedio);
		printf("\n");
	}
}
void mostrarstruct(alumno *p){
	float mayor=0; 
	int pos=0;
	printf("\n");
	for(i=0;i<3;i++){
		if((p+i)->promedio > mayor){
			mayor=(p+i)->promedio;
			pos=i;
		}
	}
	printf("Alumno con el Mejor Promedio\n\n");
	printf("Nombre: %s  ",(p+pos)->nombre);
	printf("Edad: %d \n",(p+pos)->edad);
	printf("PROMEDIO MAYOR: %.1f\n",(p+pos)->promedio);
	
}
void pedir_datosm(){
	printf("escriba el tama?o de las filas\n");
	scanf("%d",&f);
	printf("\nEscriba el tama?o de las columnas\n");
	scanf("%d",&c);
	printf("\nEscriba los datos para la matriz 1\n Posiciones\n");
	for(i=0;i<f;i++){
		for (j=0;j<c;j++){
			printf("%d,%d: ",i,j);
			scanf("%d",&(*(pmat+i+j*c)));
		}
		
	}	
	printf("\nEscriba los datos para la matriz 2\n Posiciones\n");
	for(i=0;i<f;i++){
		for (j=0;j<c;j++){
			printf("%d,%d: ",i,j);
			scanf("%d",&(*(pmat2+i+j*c)));
		}
		
	}
	
	
	
}
void suma(){
	printf("\n---Suma de matriz 1 y matriz 2---\n\n");
	for(i=0;i<f;i++){
		for (j=0;j<c;j++){
			
			*(presult+i+j*c)=*(pmat+i+j*c)+*(pmat2+i+j*c);
			
			printf("%d\t",*(presult+i+j*c));
		}
		printf("\n");
	}
	
	
}

void ascendente(){
	printf("Escriba cuantos numeros desea ordenar\n");
	scanf("%d",&no);
	printf("Escriba los numeros a ordenar\n");
	for(i=0;i<no;i++){
		printf("Numero%d: ",i+1);
		scanf("%d",&(*(num+i)));
	}	
	for(i=0;i<no;i++){
		for(j=i+1;j<no;j++){
			if(*(num+j)<*(num+i)){
				aux=*(num+j);
				*(num+j)=*(num+i);
				*(num+i)=*(num+j);
				*(num+i)=aux;	
				
			}
			
		}
	}
	
	
	
}
void imprimir_ascendente(){
	printf("\nNumeros Ordenados ascendentemente\n");
	
	for(i=0;i<no;i++){
		printf("%d-",*(num+i));
		
	}
	
	
}
void pedir_datosnum(){
	printf("Escriba cuantos numeros desea almacenar\n");
	scanf("%d",&no);
	printf("Escriba los numeros que desea almacenar\n");
	for(i=0;i<no;i++){
		printf("Numero%d: ",i+1);
		scanf("%d",&(*(pno+i)));
	}	
	
	
	
}
void consultar(){
	
	printf("Escriba que numero de los ingresados desea consultar\n");
	scanf("%d",&n1);
	for(i=0;i<no;i++){
		if(n1==(*(pno+i))){
			c++;
		}
	}
	
	if(c==1){
		printf("Numero:%d ",n1);
	}else{
		printf("Numero no ingresado\n");
		
	}
	
}
void pedir_datost(){
	printf("escriba el tama?o de las filas\n");
	scanf("%d",&f);
	printf("\nEscriba el tama?o de las columnas\n");
	scanf("%d",&c);
	printf("\nEscriba los datos para la matriz \n Posiciones\n");
	for(i=0;i<f;i++){
		for (j=0;j<c;j++){
			printf("%d,%d: ",i,j);
			scanf("%d",&(*(ptras+i+j*c)));
		}
		
	}	
	
	
}
void traspuesta(){
	printf("\n---Matriz Ingresada---\n\n");
	for(i=0;i<f;i++){
		for (j=0;j<c;j++){
			
			printf("%d\t",*(ptras+i+j*c));
		}
		printf("\n");
	}
	
	printf("\n\n---Matriz traspuesta---\n\n");
	for(i=0;i<f;i++){
		for (j=0;j<c;j++){
			
			printf("%d\t",*(ptras+j+i*c));
		}
		printf("\n");
	}
	
	
}
void punto3(){
	printf(" a. estructura Competidor \n ");
	printf("b. estructura para el mejor promedio \n ");
	printf("c. array de n empleados de una empresa Imprimiendo el mayor y menor de sueldo \n ");
	printf("d. estructura anidada de un estudiante \n ");
	printf("e. estructura anidada de N estudiante \n ");
	printf("f. estructura de personas con y sin discapacidad \n\n ");
	printf("Seleccione una opcion \n\n ");
	scanf("%s",&caso);
	system("cls");
	switch(caso){
	case 'a':
		d_atleta(patleta);
		system("pause");
		system("cls");
		break;
	case 'b':
		c_promedio();
		system("pause");
		system("cls");
		break;
	case 'c':
		empresa();
		system("pause");
		system("cls");
		break;
	case 'd':
		strAnidado(paprendiz);
		system("pause");
		system("cls");
		break;
	case 'e':
		nstrAnidado(pnAprendiz);
		system("pause");
		system("cls");
		break;
	case 'f':
		int cantidad;
		printf("Ingrese Cantidad: ");
		scanf("%d", &cantidad);
		llenarDatos(cantidad, puntpersonas);
		validarDatos(cantidad);
		imprimirDatodiscapacidad(cantidad);
		imprimirDatosindiscapacidad(cantidad);
		system("pause");
		system("cls");
		break;
	}
}
void d_atleta(competidor *patleta){
	char categoria[10];
	fflush(stdin);
	printf("DATOS DEL COMPETIDOR\n");
	printf("Ingrese el nombre del atleta \n");
	fgets(patleta->nombre,30,stdin);
	printf("Ingrese la edad del Competidor\n");
	scanf("%d",&patleta->edad);
	fflush(stdin);
	printf("Sexo del Competidor ( m/f ) \n");
	scanf("%c",&patleta->sexo);
	fflush(stdin);
	printf("Club al que pertenece el Competidor \n");
	fgets(patleta->club,20,stdin);
	
	if(patleta->edad<=15){
		strcpy(categoria,"Infantil");
	}else{
		if(patleta->edad<=30){
			strcpy(categoria,"Joven");
		}else{
			if (patleta->edad>30){
				strcpy(categoria,"Mayor");
			}
		}
	}
	printf("\nDATOS DEL COMPETIDOR\n");
	printf("Nombre: %s \n Edad: %d \n Sexo: %c \n Club: %s \n",patleta->nombre,patleta->edad,patleta->sexo,patleta->club);
}
void pedirdatos(){
	printf("tiempo recorrido por un ciclista\n");
	printf("escriba el primer tiempo\n");
	printf("horas: ");
	scanf("%d",&pciclista->hora1);
	printf("minutos: ");
	scanf("%d",&pciclista->min1);
	printf("segundos: ");
	scanf("%d",&pciclista->seg1);
	printf("escriba el segundo tiempo\n");
	printf("horas: ");
	scanf("%d",&pciclista->hora2);
	printf("minutos: ");
	scanf("%d",&pciclista->min2);
	printf("segundos: ");
	scanf("%d",&pciclista->seg2);
	printf("escriba el tercer tiempo\n");
	printf("horas: ");
	scanf("%d",&pciclista->hora3);
	printf("minutos: ");
	scanf("%d",&pciclista->min3);
	printf("segundos: ");
	scanf("%d",&pciclista->seg3);
	*(thoras)=pciclista->hora1+pciclista->hora2+pciclista->hora3;
	*(tmin)=pciclista->min1+pciclista->min2+pciclista->min3;
	*(tseg)=pciclista->seg1+pciclista->seg2+pciclista->seg3;
}

void imprimirdatos(){
	printf("el total del tiempo recorrido por el ciclista en las 3 etapas es de:\n %d horas con %d minutos  y %d  segundos ",*(thoras),*(tmin),*(tseg));
}
void empresa(){
	int smayor=0,smenor=0,cont=0,con=0,l;
	printf("Ingrese la Cantidad de empleados que hay\n");
	scanf("%d",&l);
	fflush(stdin);
	n[l];
	pn=n;
	
	for(i=0;i<l;i++){
		printf("Nombre Empleado: ");
		fgets((pn+i)->nombre,30,stdin);
		printf("Salario: ");
		scanf("%d",&((pn+i)->salario));
		fflush(stdin);
		printf("\n");
	}
	for (i=0;i<l;i++){
		if((pn+i)->salario > smayor){
			smayor=(pn+i)->salario;
			cont=i;
		}
	}
	smenor=smayor;
	for(i=0;i<l;i++){
		if((pn+i)->salario < smenor){
			smenor=(pn+i)->salario;
			con=i;
		}
	}
	
	printf("Empleado: %s Mayor Salario: %d\n",(pn+cont)->nombre,smayor); 
	printf("Empleado: %s Menor Salario: %d\n",(pn+con)->nombre,smenor); 
	
}
void strAnidado(alumns *paprendiz){
	fflush(stdin);
	float prom;
	printf("DATOS DEL ALUMNO\n");
	printf("Nombre:");
	fgets(paprendiz->nombre,30,stdin);
	printf("Sexo: ");
	scanf("%c",&(paprendiz->sexo));
	printf("Edad:");
	scanf("%d",&(paprendiz->edad));
	printf("\n .: NOTAS:.\n");
	scanf("%f ",&paprendiz->p.n_1);
	scanf("%f",&paprendiz->p.n_2);
	scanf("%f",&paprendiz->p.n_3);
	prom=(paprendiz->p.n_1+paprendiz->p.n_2+paprendiz->p.n_3)/3;
	printf("Nombre: %s",paprendiz->nombre);
	printf("Sexo: %c \n",paprendiz->sexo);
	printf("Edad: %d \n",paprendiz->edad);
	printf("Promedio: %.1f \n ",prom);
}
void nstrAnidado(alumns *pnAprendiz){
	fflush(stdin);
	int c;
	printf("ingrese la cantidad de alumnos ");
	scanf("%d",&c);
	fflush(stdin);
	nAprendiz[c];
	for(i=0;i<c;i++){
		printf("DATOS DEL ALUMNO\n");
		fflush(stdin);
		
		printf("Nombre: ");
		fgets((pnAprendiz+i)->nombre,30,stdin);
		printf("Sexo m/f : ");
		scanf("%c",&((pnAprendiz+i)->sexo));
		printf("Edad:");
		scanf("%d",&((pnAprendiz+i)->edad));
		printf("\n .: NOTAS:.\n");
		scanf("%f ",&(pnAprendiz+i)->p.n_1);
		scanf("%f",&(pnAprendiz+i)->p.n_2);
		scanf("%f",&(pnAprendiz+i)->p.n_3);
		prom[i]=((pnAprendiz+i)->p.n_1+(pnAprendiz+i)->p.n_2+(pnAprendiz+i)->p.n_3)/3;
		if(prom[i]>may){
			may=prom[i];
			pos=i;
		}
		
	}
	men=may;
	for(int j=0;j<c;j++){
		if(prom[j]<men){
			men=prom[j];
			posc=j;
		}
	}
	system("pause");
	system("cls");
	printf("Nombre: %s",(pnAprendiz+pos)->nombre);
	printf("Sexo: %c \n",(pnAprendiz+pos)->sexo);
	printf("Edad: %d \n",(pnAprendiz+pos)->edad);
	printf("Promedio Mayor : %.1f \n ",prom[pos]);
	printf("\n");
	printf("Nombre: %s",(pnAprendiz+posc)->nombre);
	printf("Sexo: %c \n",(pnAprendiz+posc)->sexo);
	printf("Edad: %d \n",(pnAprendiz+posc)->edad);
	printf("Promedio Mayor : %.1f \n ",prom[posc]);
}
void c_promedio(){
	fflush(stdin);
	for(i=0;i<3;i++){
		fflush(stdin);
		printf(" Nombre:");
		fgets((pa+i)->nombre,30,stdin);
		printf(" Edad: ");
		scanf("%d",&(pa+i)->edad);
		printf(" Grado:");
		scanf("%d",&(pa+i)->grado);
		printf(" Promedio:");
		scanf("%f",&(pa+i)->promedio);
		printf("\n\n");
		prom[i]=(pa+i)->promedio;
		if(prom[i]>may){
			may=(pa+i)->promedio;
			pos=i;
		}
	}
	printf("Nombre: %s",(pa+pos)->nombre);
	printf("Edad: %d\n",(pa+pos)->edad);
	printf("Grado: %d\n",(pa+pos)->grado);
	printf("Promedio: %.1f\n",(prom[pos]));
}
void llenarDatos(int cantidad, persona *puntpersonas){
	char opcion;
	for(int i = 0; i < cantidad; i++)
	{
		fflush(stdin);
		printf("Ingrese Nombre: ");
		fgets((puntpersonas+i)->nombre,30,stdin);
		printf("Ingrese s para discapacitado y n para no discapacitado: ");
		scanf("%c",&opcion);
		if(opcion == 's'){
			(puntpersonas + i)->discapacidad = true;
		}else{
			if(opcion== 'n'){
				(puntpersonas + i) -> discapacidad = false;
			}
		}
		
		printf("\n");
	}
}

void validarDatos(int cantidad){
	int i;
	for(i = 0; i < cantidad; i++){
		if((puntpersonas + i) -> discapacidad == true){
			strcpy((ppdiscapacidad+i)->nombre,( puntpersonas+i)->nombre);
			(ppdiscapacidad + i) -> discapacidad = true;
		}
		else
		{
			strcpy((ppsdiscapacidad + i) -> nombre,(puntpersonas + i) -> nombre);
			(ppsdiscapacidad + i) -> discapacidad = false;
		}
	}
}

void imprimirDatodiscapacidad(int cantidad){
	int i;
	printf("Personas con discapacidad: \n");
	for(i = 0; i < cantidad; i++){
		if((ppdiscapacidad+i)->discapacidad==true){
			printf("%s \n", (ppdiscapacidad + i) -> nombre);
		}
	}
}
void imprimirDatosindiscapacidad(int cantidad){
	int i;
	printf("Personas sin discapacidad: \n");
	for(i = 0; i < cantidad; i++){
		if((ppsdiscapacidad+i)->discapacidad==false){
			printf("%s \n", (ppsdiscapacidad + i) -> nombre);
		}
	}
}
void elevados(){
	int x[4][4],i,j;
	int *px=&x[0][0];
	printf("ingrese los valores de la primer columna \n ");
	for ( i=0;i<4;i++){
		for( j=0;j<4;j+=4){
			scanf("%d",&(*(px+i+j*4)));
		}
	}
	for ( i=0;i<4;i++){
		for( j=1;j<4;j++){
			if(j==1){
				*(px+i+j*4)=(*(px+i+0*4))*(*(px+i+0*4));
			}else{
				if(j==2){
					*(px+i+j*4)=(*(px+i+0*4))*(*(px+i+0*4))*(*(px+i+0*4));
				}else{
					if(j==3){
						*(px+i+j*4)=(*(px+i+0*4))*(*(px+i+0*4))*(*(px+i+0*4))*(*(px+i+0*4));
					}
				}
			}
		}
	}
	printf("\n\n");
	for(i=0;i<4;i++){
		for(j=0;j<4;j++){
			printf("%d\t ",*(px+i+j*4));
		}
		printf("\n");
	}
}
